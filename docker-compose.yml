version: "3.4"

services:
  php:
    build:
      context: api/
      dockerfile: local.Dockerfile
    depends_on:
      - database
    volumes:
      - php_socket:/var/run/php
    ports:
      - 80:80
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-api-platform}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-api}?serverVersion=${POSTGRES_VERSION:-13}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|caddy$$
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeMe!}
    
  kyc:
    build: ./kyc_api
    volumes:
      - ./kyc_api:/usr/local/server
      - /usr/local/server/node_modules
    working_dir: /usr/local/server
    environment:
      - PORT=3000
    ports:
      - 3000:3000

  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-api}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-!ChangeMe!}
      - POSTGRES_USER=${POSTGRES_USER:-api-platform}
    volumes:
      - db_challenge_data:/var/lib/postgresql/data:rw
  adminer:
    image: adminer
    depends_on:
      - database
    ports:
      - 8080:8080

volumes:
  php_socket:
  db_challenge_data:
