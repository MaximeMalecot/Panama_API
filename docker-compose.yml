version: "3.4"

services:
  php:
    build:
      context: api/
      dockerfile: local.Dockerfile
    depends_on:
      - database
    volumes:
      - php_socket:/var/run/php
    ports:
      - 80:80
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      - apis
      - db
    
  kyc:
    build: ./kyc_api
    volumes:
      - ./kyc_api:/usr/local/server
      - /usr/local/server/node_modules
    working_dir: /usr/local/server
    restart: always
    environment:
      - PORT=3000
    ports:
      - 3000:3000
    networks:
      - apis

  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-api}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-!ChangeMe!}
      - POSTGRES_USER=${POSTGRES_USER:-api-platform}
    volumes:
      - db_challenge_data:/var/lib/postgresql/data:rw
    networks:
      - db
      - dbadmin

  adminer:
    image: adminer
    depends_on:
      - database
    ports:
      - 8080:8080
    networks:
      - dbadmin

networks:
  apis:
  db:
  dbadmin:

volumes:
  php_socket:
  db_challenge_data:
